{"version":3,"sources":["features/calculator/calculatorSlice.js","features/calculator/Calculator.js","features/calculator/EstimateGoal.js","App.js","serviceWorker.js","slices/index.js","index.js","features/calculator/Calculator.module.css"],"names":["calculatorSlice","createSlice","name","initialState","yearlytTotalMoneyList","yearlyDeposiMoneyList","reducers","calculate","state","action","console","log","payload","initialDepositMoney","depositIncreaseRate","depositPeriod","investingGainRate","goalMoney","depositMoney","totalMoney","initialMoney","push","cnt","actions","Calculator","props","handleChange","e","setState","target","Number","value","updateEnableButton","isInteger","enableButton","handleClick","initialDepositMoneyMultiplier","goalMoneyMultiplier","className","styles","row","inputArea","inputBox","onChange","this","type","placeholder","disabled","onClick","Component","connect","result","calculator","dispatch","EstimateGoal","useSelector","chartData","map","money","index","Math","floor","data","labels","datasets","label","fill","lineTension","backgroundColor","borderColor","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","pointBorderColor","pointBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","pointRadius","pointHitRadius","length","App","Boolean","window","location","hostname","match","rootReducer","combineReducers","calculatorReducer","store","configureStore","reducer","subscribe","getState","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.79cd63b7.chunk.js","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nexport const calculatorSlice = createSlice({\r\n  name: \"calculator\",\r\n  initialState: {\r\n    yearlytTotalMoneyList: [],\r\n    yearlyDeposiMoneyList: [],\r\n  },\r\n  reducers: {\r\n    calculate: (state, action) => {\r\n      console.log(\"calculate / payload:\", action.payload);\r\n\r\n      const {\r\n        initialDepositMoney,\r\n        depositIncreaseRate,\r\n        depositPeriod,\r\n        investingGainRate,\r\n        goalMoney,\r\n        initialMoney,\r\n      } = action.payload;\r\n\r\n      let yearlytTotalMoneyList = [];\r\n      let yearlyDeposiMoneyList = [];\r\n      let depositMoney = initialDepositMoney;\r\n      let totalMoney = initialDepositMoney + initialMoney;\r\n      yearlytTotalMoneyList.push(totalMoney);\r\n      yearlyDeposiMoneyList.push(depositMoney);\r\n\r\n      let cnt = 1;\r\n\r\n      while (totalMoney < goalMoney) {\r\n        cnt++;\r\n\r\n        totalMoney = totalMoney * (1 + investingGainRate * 0.01); // monthly increase rate\r\n\r\n        if (cnt <= depositPeriod) {\r\n          depositMoney = depositMoney * (1 + depositIncreaseRate * 0.01); // monthly increase rate\r\n          totalMoney = totalMoney + depositMoney;\r\n          yearlyDeposiMoneyList.push(depositMoney);\r\n        } else {\r\n          totalMoney = totalMoney;\r\n          yearlyDeposiMoneyList.push(0);\r\n        }\r\n\r\n        yearlytTotalMoneyList.push(totalMoney);\r\n      }\r\n\r\n      state.yearlytTotalMoneyList = yearlytTotalMoneyList;\r\n      state.yearlyDeposiMoneyList = yearlyDeposiMoneyList;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { calculate } = calculatorSlice.actions;\r\n\r\nexport default calculatorSlice.reducer;\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { calculate } from \"./calculatorSlice\";\r\nimport styles from \"./Calculator.module.css\";\r\n\r\nclass Calculator extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      initialDepositMoney: \"\",\r\n      depositIncreaseRate: \"\",\r\n      goalMoney: \"\",\r\n      investingGainRate: \"\",\r\n      goalMoneyMultiplier: 10000,\r\n      initialDepositMoneyMultiplier: 10000,\r\n      enableButton: false,\r\n    };\r\n  }\r\n\r\n  handleChange = (e) => {\r\n    this.setState(\r\n      {\r\n        [e.target.name]: Number(e.target.value),\r\n      },\r\n      this.updateEnableButton\r\n    );\r\n  };\r\n\r\n  updateEnableButton = (e) => {\r\n    const {\r\n      initialDepositMoney,\r\n      depositIncreaseRate,\r\n      investingGainRate,\r\n      goalMoney,\r\n      initialMoney,\r\n      depositPeriod,\r\n    } = this.state;\r\n\r\n    if (\r\n      !(typeof initialDepositMoney === \"number\") ||\r\n      initialDepositMoney < 0 ||\r\n      !(typeof depositIncreaseRate === \"number\") ||\r\n      depositIncreaseRate < 0 ||\r\n      !(typeof investingGainRate === \"number\") ||\r\n      investingGainRate < 0 ||\r\n      !(typeof goalMoney === \"number\") ||\r\n      goalMoney < 0 ||\r\n      !(typeof initialMoney === \"number\") ||\r\n      initialMoney < 0 ||\r\n      !Number.isInteger(depositPeriod) ||\r\n      depositPeriod <= 0\r\n    ) {\r\n      this.setState({ enableButton: false });\r\n    } else {\r\n      this.setState({ enableButton: true });\r\n    }\r\n  };\r\n\r\n  handleClick = () => {\r\n    const {\r\n      initialDepositMoney,\r\n      depositIncreaseRate,\r\n      investingGainRate,\r\n      goalMoney,\r\n      initialMoney,\r\n      depositPeriod,\r\n    } = this.state;\r\n\r\n    if (\r\n      !(typeof initialDepositMoney === \"number\") ||\r\n      initialDepositMoney < 0 ||\r\n      !(typeof depositIncreaseRate === \"number\") ||\r\n      depositIncreaseRate < 0 ||\r\n      !(typeof investingGainRate === \"number\") ||\r\n      investingGainRate < 0 ||\r\n      !(typeof goalMoney === \"number\") ||\r\n      goalMoney < 0 ||\r\n      !(typeof initialMoney === \"number\") ||\r\n      initialMoney < 0 ||\r\n      !Number.isInteger(depositPeriod)\r\n    )\r\n      return;\r\n\r\n    this.props.calculate({\r\n      initialDepositMoney:\r\n        this.state.initialDepositMoney *\r\n        this.state.initialDepositMoneyMultiplier,\r\n      depositIncreaseRate: this.state.depositIncreaseRate,\r\n      investingGainRate: this.state.investingGainRate,\r\n      goalMoney: this.state.goalMoney * this.state.goalMoneyMultiplier,\r\n      initialMoney: this.state.initialMoney * 10000,\r\n      depositPeriod: this.state.depositPeriod,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className={styles.row}>\r\n          <div className={styles.inputArea}>\r\n            <div className={styles.inputBox}>\r\n              <span className=\"title\">초기 금액: </span>\r\n              <input\r\n                name=\"initialMoney\"\r\n                onChange={this.handleChange}\r\n                type=\"text\"\r\n                placeholder=\"(숫자)\"\r\n              />\r\n              만원\r\n            </div>\r\n            <div className={styles.inputBox}>\r\n              <span className=\"title\">첫 연도 저축액: </span>\r\n              <input\r\n                name=\"initialDepositMoney\"\r\n                onChange={this.handleChange}\r\n                type=\"text\"\r\n                placeholder=\"(숫자)\"\r\n              />\r\n              <select\r\n                name=\"initialDepositMoneyMultiplier\"\r\n                value={this.state.initialDepositMoneyMultiplier}\r\n                onChange={this.handleChange}\r\n              >\r\n                <option value=\"100000000\">억원</option>\r\n                <option value=\"10000\">만원</option>\r\n                <option value=\"1\">원</option>\r\n              </select>\r\n            </div>\r\n            <div className={styles.inputBox}>\r\n              <span className=\"title\">매년 저축 증가율: </span>\r\n              <input\r\n                name=\"depositIncreaseRate\"\r\n                onChange={this.handleChange}\r\n                type=\"text\"\r\n                placeholder=\"(숫자)\"\r\n              />\r\n              %\r\n            </div>\r\n            <div className={styles.inputBox}>\r\n              <span className=\"title\">저축 기간: </span>\r\n              <input\r\n                name=\"depositPeriod\"\r\n                onChange={this.handleChange}\r\n                type=\"text\"\r\n                placeholder=\"(정수, 최소 1년)\"\r\n              />\r\n              년\r\n            </div>\r\n            {/* <div className={styles.inputBox}>\r\n            <span className=\"title\">매년 투자액 증가량: </span>\r\n            <input type=\"text\" />\r\n          </div> */}\r\n            <div className={styles.inputBox}>\r\n              <span className=\"title\">매년 투자 수익률: </span>\r\n              <input\r\n                name=\"investingGainRate\"\r\n                onChange={this.handleChange}\r\n                type=\"text\"\r\n                placeholder=\"(숫자)\"\r\n              />\r\n              %\r\n            </div>\r\n            <div className={styles.inputBox}>\r\n              <span className=\"title\">목표 금액: </span>\r\n              <input\r\n                name=\"goalMoney\"\r\n                onChange={this.handleChange}\r\n                type=\"text\"\r\n                placeholder=\"(숫자)\"\r\n              />\r\n              <select\r\n                name=\"goalMoneyMultiplier\"\r\n                value={this.state.goalMoneyMultiplier}\r\n                onChange={this.handleChange}\r\n              >\r\n                <option value=\"100000000\">억원</option>\r\n                <option value=\"10000\">만원</option>\r\n                <option value=\"1\">원</option>\r\n              </select>\r\n            </div>\r\n            <button\r\n              disabled={!this.state.enableButton}\r\n              onClick={this.handleClick}\r\n            >\r\n              계산\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  result: state.calculator.result,\r\n});\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    calculate: (action) => dispatch(calculate(action)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Calculator);\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Line } from \"react-chartjs-2\";\r\n\r\nexport default function EstimateGoal() {\r\n  const { yearlytTotalMoneyList, yearlyDeposiMoneyList } = useSelector(\r\n    (state) => state.calculator\r\n  );\r\n\r\n  const chartData = yearlytTotalMoneyList.map((money, index) => {\r\n    return Math.floor(money / 10000);\r\n  });\r\n  const labelData = yearlytTotalMoneyList.map(\r\n    (money, index) => index + \"년 뒤\"\r\n  );\r\n\r\n  const chartData2 = yearlyDeposiMoneyList.map((money, index) => {\r\n    return Math.floor(money / 10000);\r\n  });\r\n\r\n  const data = {\r\n    labels: labelData,\r\n    datasets: [\r\n      {\r\n        label: \"총 자산\",\r\n        fill: false,\r\n        lineTension: 0.1,\r\n        backgroundColor: \"rgba(75,192,192,0.4)\",\r\n        borderColor: \"rgba(75,192,192,1)\",\r\n        borderCapStyle: \"butt\",\r\n        borderDash: [],\r\n        borderDashOffset: 0.0,\r\n        borderJoinStyle: \"miter\",\r\n        pointBorderColor: \"rgba(75,192,192,1)\",\r\n        pointBackgroundColor: \"#fff\",\r\n        pointBorderWidth: 1,\r\n        pointHoverRadius: 5,\r\n        pointHoverBackgroundColor: \"rgba(75,192,192,1)\",\r\n        pointHoverBorderColor: \"rgba(220,220,220,1)\",\r\n        pointHoverBorderWidth: 2,\r\n        pointRadius: 1,\r\n        pointHitRadius: 10,\r\n        data: chartData,\r\n      },\r\n      {\r\n        label: \"해당 년도 저축액\",\r\n        fill: false,\r\n        lineTension: 0.1,\r\n        backgroundColor: \"rgba(35,32,192,0.4)\",\r\n        borderColor: \"rgba(35,32,192,1)\",\r\n        borderCapStyle: \"butt\",\r\n        borderDash: [],\r\n        borderDashOffset: 0.0,\r\n        borderJoinStyle: \"miter\",\r\n        pointBorderColor: \"rgba(35,32,192,1)\",\r\n        pointBackgroundColor: \"#fff\",\r\n        pointBorderWidth: 1,\r\n        pointHoverRadius: 5,\r\n        pointHoverBackgroundColor: \"rgba(35,32,192,1)\",\r\n        pointHoverBorderColor: \"rgba(5,32,192,1)\",\r\n        pointHoverBorderWidth: 2,\r\n        pointRadius: 1,\r\n        pointHitRadius: 10,\r\n        data: chartData2,\r\n      },\r\n    ],\r\n  };\r\n\r\n  console.log(data);\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        <h3>\r\n          당신의 목표 금액을 모으기 위해서는{\" \"}\r\n          {yearlytTotalMoneyList.length === 0\r\n            ? \"?\"\r\n            : yearlytTotalMoneyList.length - 1}\r\n          년 걸립니다\r\n        </h3>\r\n      </div>\r\n      <Line data={data} />\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport Calculator from \"./features/calculator/Calculator\";\r\nimport EstimateGoal from \"./features/calculator/EstimateGoal\";\r\nimport \"./App.css\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n        <h2>경제적 자유를 위하여!</h2>\r\n        <Calculator />\r\n        <EstimateGoal />\r\n      </header>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import { combineReducers } from \"redux\";\r\n\r\nimport calculatorReducer from \"../features/calculator/calculatorSlice\";\r\n\r\nconst rootReducer = combineReducers({\r\n  calculator: calculatorReducer,\r\n});\r\n\r\nexport default rootReducer;\r\n","import React, { Router, Route } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport { Provider } from \"react-redux\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport rootReducer from \"./slices\";\r\nimport { configureStore } from \"@reduxjs/toolkit\";\r\n\r\nconst store = configureStore({ reducer: rootReducer });\r\n\r\nstore.subscribe(() => {\r\n  const state = store.getState();\r\n  console.log(\"I dispatched successfully: \", state);\r\n});\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      {/* <Router basename={\"MoneyFreedom\"}>\r\n        <Route component={App} />\r\n      </Router> */}\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"row\":\"Calculator_row__iPYgU\",\"inputArea\":\"Calculator_inputArea__1kMN1\",\"inputBox\":\"Calculator_inputBox__1Xua_\",\"value\":\"Calculator_value__1e5js\",\"button\":\"Calculator_button__23xFb\",\"textbox\":\"Calculator_textbox__3tlzq\",\"asyncButton\":\"Calculator_asyncButton__1PrgG Calculator_button__23xFb\"};"],"sourceRoot":""}